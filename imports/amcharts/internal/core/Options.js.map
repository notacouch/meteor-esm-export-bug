{"version":3,"file":"Options.js","sourceRoot":"","sources":["../../../../src/.internal/core/Options.ts"],"names":[],"mappings":"AAuCA,MAAM,CAAC,IAAM,OAAO,GAAY;IAC/B,OAAO,EAAE,IAAI;IACb,iBAAiB,EAAE,KAAK;IACxB,eAAe,EAAE,WAAW;IAC5B,gBAAgB,EAAE,KAAK;CACvB,CAAC","sourcesContent":["export interface Options {\n\t/**\n\t * Console output enabled.\n\t *\n\t * @type {boolean}\n\t */\n\tverbose: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tcommercialLicense: boolean;\n\n\t/**\n\t * amCharts will add `class` property to some elements. All those class names\n\t * will be prefixed by `classNamePrefix`.\n\t *\n\t * @type {string}\n\t */\n\tclassNamePrefix: string;\n\n\t/**\n\t * Normally, the chart will create its elements without any `className`\n\t * attributes.\n\t *\n\t * If you set this to `true`, it will set class names that will reflect\n\t * the actual class this the SVG element corresponds to.\n\t *\n\t * The className will contain class prefixed with `amcharts-`. (prefix is\n\t * configurable via `classNamePrefix`)\n\t *\n\t * E.g. `\"amcharts-button\"`.\n\t *\n\t * @default false\n\t * @type {boolean}\n\t */\n\tautoSetClassName: boolean;\n}\n\nexport const options: Options = {\n\tverbose: true,\n\tcommercialLicense: false,\n\tclassNamePrefix: \"amcharts-\",\n\tautoSetClassName: false\n};\n"]}