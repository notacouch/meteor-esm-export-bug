{"version":3,"file":"Interaction.js","sourceRoot":"","sources":["../../../../../src/.internal/core/interaction/Interaction.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions } from \"./InteractionOptions\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./InteractionObject\";\r\nimport { InteractionKeyboardObject } from \"./InteractionKeyboardObject\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { Inertia, InertiaTypes } from \"./Inertia\";\r\nimport { IPointer, IBreadcrumb } from \"./Pointer\";\r\nimport { addEventListener } from \"../utils/DOM\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IStyleProperty } from \"../defs/IStyleProperty\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Interaction]]\r\n */\r\nexport interface IInteractionEvents extends IBaseObjectEvents {\r\n\r\n\ttrack: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tdown: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tup: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tfocus: {\r\n\t\tevent: FocusEvent;\r\n\t}\r\n}\r\n\r\n/**\r\n * Interface representing a delayed event\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IDelayedEvent {\r\n\ttype: keyof IInteractionObjectEvents;\r\n\tio: InteractionObject;\r\n\tpointer: IPointer;\r\n\tevent: MouseEvent | TouchEvent;\r\n\ttimeout?: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n﻿/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n *\r\n * @see {@link IInteractionEvents} for a list of available events\r\n * @todo Throw exceptions on errors\r\n */\r\nexport class Interaction extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IInteractionEvents}\r\n\t * @ignore Exclude from docs\r\n\t * @deprecated Use inetraction.body.events instead\r\n\t */\r\n\tpublic _events!: IInteractionEvents;\r\n\r\n\t/**\r\n\t * A reference to an [[Interaction]] object for document's body.\r\n\t *\r\n\t * Users can use it to add global, non-chart related events, that will be\r\n\t * applicable to the whole document.\r\n\t *\r\n\t * @type {InteractionObject}\r\n\t */\r\n\tpublic body: InteractionObject;\r\n\r\n\t/**\r\n\t * An indicator of global events were already initialized.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _globalEventsAdded: boolean = false;\r\n\r\n\t/**\r\n\t * Holds which mouse event listeners to use.\r\n\t *\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _pointerEvents = {\r\n\t\t\"pointerdown\": \"mousedown\",\r\n\t\t\"pointerup\": \"mouseup\",\r\n\t\t\"pointermove\": \"mousemove\",\r\n\t\t\"wheel\": \"wheel\"\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates if Interaction should use only \"pointer\" type events, like\r\n\t * \"pointermove\", available in all modern browsers, ignoring \"legacy\"\r\n\t * events, like \"touchmove\".\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _usePointerEventsOnly: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if passive mode options is supported by this browser.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _passiveSupported: boolean = false;\r\n\r\n\t/**\r\n\t * Holds list of delayed events\r\n\t *\r\n\t * @type {IDelayedEvent[]}\r\n\t */\r\n\tprotected _delayedEvents: { out: IDelayedEvent[] } = { out: [] };\r\n\r\n\t/**\r\n\t * List of objects that current have a pointer hovered over them.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic overObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that currently has a pressed pointer.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic downObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that need mouse position to be reported to them.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic trackedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that are currently being dragged.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic transformedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * An object that currently has focus. Usually set automatically via\r\n\t * [[InteractionObject]] `isFocus` method.\r\n\t *\r\n\t * @type {Optional<InteractionObject>}\r\n\t */\r\n\tpublic focusedObject: $type.Optional<InteractionObject>;\r\n\r\n\t/**\r\n\t * Holds all known pointers.\r\n\t *\r\n\t * @type {Dictionary<string, IPointer>}\r\n\t */\r\n\tpublic pointers = new Dictionary<string, IPointer>();\r\n\r\n\t/**\r\n\t * Inertia options that need to be applied to after element drag, if it's\r\n\t * `inert = true`.\r\n\t *\r\n\t * This is just a default, which can and probably will be overridden by\r\n\t * actual elements.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic inertiaOptions = new Dictionary<InertiaTypes, IInertiaOptions>();\r\n\r\n\t/**\r\n\t * Default options for click events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IHitOptions}\r\n\t */\r\n\tpublic hitOptions: IHitOptions = {\r\n\t\t\"holdTime\": 1000,\r\n\t\t\"doubleHitTime\": 300,\r\n\t\t\"delayFirstHit\": false,\r\n\t\t\"hitTolerance\": 10,\r\n\t\t\"noFocus\": true\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for hover events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IHoverOptions}\r\n\t */\r\n\tpublic hoverOptions: IHoverOptions = {\r\n\t\t\"touchOutBehavior\": \"leave\",\r\n\t\t\"touchOutDelay\": 1000\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for detecting a swipe gesture. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {ISwipeOptions}\r\n\t */\r\n\tpublic swipeOptions: ISwipeOptions = {\r\n\t\t\"time\": 500,\r\n\t\t\"verticalThreshold\": 75,\r\n\t\t\"horizontalThreshold\": 30\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for keyboard operations. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IKeyboarOptions}\r\n\t */\r\n\tpublic keyboardOptions: IKeyboardOptions = {\r\n\t\t\"speed\": 0.1,\r\n\t\t\"accelleration\": 1.2,\r\n\t\t\"accellerationDelay\": 1000\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Constructor. Sets up universal document-wide move events to handle stuff\r\n\t * outside particular chart container.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Call super\r\n\t\tsuper();\r\n\r\n\t\t// Set class name\r\n\t\tthis.className = \"Interaction\";\r\n\r\n\t\t// Create InteractionObject for <body>\r\n\t\tthis.body = this.getInteraction(document.body);\r\n\r\n\t\tthis._disposers.push(this.body);\r\n\r\n\t\t// Detect browser capabilities and determine what event listeners to use\r\n\t\tif (window.hasOwnProperty(\"PointerEvent\")) {\r\n\t\t\t// IE10+/Edge without touch controls enabled\r\n\t\t\tthis._pointerEvents.pointerdown = \"pointerdown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"pointerup\";\r\n\t\t\tthis._pointerEvents.pointermove = \"pointermove\";\r\n\t\t\tthis._usePointerEventsOnly = true;\r\n\t\t} else if (window.hasOwnProperty(\"MSPointerEvent\")) {\r\n\t\t\t// IE9\r\n\t\t\tthis._pointerEvents.pointerdown = \"MSPointerDown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"MSPointerUp\";\r\n\t\t\tthis._pointerEvents.pointermove = \"MSPointerMove\";\r\n\t\t\tthis._usePointerEventsOnly = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// uses defaults for normal browsers\r\n\t\t}\r\n\r\n\t\t// Detect proper mouse wheel events\r\n\t\tif (\"onwheel\" in document.createElement(\"div\")) {\r\n\t\t\t// Modern browsers\r\n\t\t\tthis._pointerEvents.wheel = \"wheel\";\r\n\t\t}\r\n\t\telse if ($type.hasValue(document.onmousewheel)) {\r\n\t\t\t// Webkit and IE support at least \"mousewheel\"\r\n\t\t\tthis._pointerEvents.wheel = \"mousewheel\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// The rest of the legacy browsers\r\n\t\t\tthis._pointerEvents.wheel = \"DOMMouseScroll\";\r\n\t\t}\r\n\r\n\t\t// Set up default inertia options\r\n\t\tthis.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\t\tthis.inertiaOptions.setKey(\"resize\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\t\tthis.inertiaOptions.setKey(\"rotate\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\r\n\t\t// Check for passive mode support\r\n\t\ttry {\r\n\t\t\tlet target = this;\r\n\t\t\tlet options = Object.defineProperty({}, \"passive\", {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\ttarget._passiveSupported = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twindow.addEventListener(\"test\", options, options);\r\n\t\t\twindow.removeEventListener(\"test\", options, options);\r\n\t\t} catch (err) {\r\n\t\t\tthis._passiveSupported = false;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void { }\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Processing\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Sets up global events.\r\n\t *\r\n\t * We need this so that we can track drag movement beyond chart's container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic addGlobalEvents(): void {\r\n\t\tif (!this._globalEventsAdded) {\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointermove,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerMove(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerDown(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointerup,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerUp(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"touchend\",\r\n\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchEnd(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tif (!this._usePointerEventsOnly) {\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchmove\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchMove(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchStart(ev) }\r\n\t\t\t\t));\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keydown\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyDown(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keyup\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyUp(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._globalEventsAdded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject} io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processClickable(io: InteractionObject): void {\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is hoverable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject} io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processHoverable(io: InteractionObject): void {\r\n\t\tif (io.hoverable || io.trackable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"hoverable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"hoverable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<MouseEvent>(io.element, \"mouseover\", (e) => this.handleMouseOver(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent>(io.element, \"mouseout\", (e) => this.handleMouseOut(io, e))\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t\tif (io.trackable) {\r\n\t\t\t\t//sprite.addEventListener(\"touchmove\", this.handleTouchMove, false, this);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"hoverable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"hoverable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up [[InteractionObject]] as movable. Movable can be any\r\n\t * transformation, e.g. drag, swipe, resize, track, or rotate.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processMovable(io: InteractionObject) {\r\n\r\n\t\t// Add unified events\r\n\t\tif (io.draggable || io.swipeable || io.trackable || io.resizable || io.rotatable) {\r\n\r\n\t\t\t// Prep the element\r\n\t\t\tif (!this.isGlobalElement(io)) {\r\n\t\t\t\tthis.prepElement(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is trackable and sets relative events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processTrackable(io: InteractionObject): void {\r\n\t\tthis.processHoverable(io);\r\n\t\tthis.processMovable(io);\r\n\t\tif (io.trackable) {\r\n\t\t\tthis.trackedObjects.moveValue(io);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.trackedObjects.removeValue(io);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is draggable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processDraggable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is swipeable and sets relative events.\r\n\t *\r\n\t * A swipe event is triggered when a horizontal drag of 75px or more (and\r\n\t * less than 30px vertically) occurs within 700 milliseconds. This can be\r\n\t * overridden in sprites [[swipeOptions]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processSwipeable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is resizable and attaches required events\r\n\t * to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processResizable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is rotatable and attaches required events\r\n\t * to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processRotatable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is supposed to capture mouse wheel events\r\n\t * and prepares it to catch those events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processWheelable(io: InteractionObject): void {\r\n\t\tif (io.wheelable) {\r\n\t\t\tio.hoverable = true;\r\n\t\t\tif (!io.eventDisposers.hasKey(\"wheelable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"wheelable\", addEventListener<WheelEvent>(io.element, this._pointerEvents.wheel, (e) => this.handleMouseWheel(io, e)));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"wheelable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"wheelable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is focusable. A focusable element is an\r\n\t * element that will be highlighted when users presses TAB key. If the\r\n\t * element is focusable, this function will attach relative focus/blur\r\n\t * events to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processFocusable(io: InteractionObject): void {\r\n\t\tif (io.focusable === true && (io.tabindex > -1)) {\r\n\t\t\tif (!io.eventDisposers.hasKey(\"focusable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"focusable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"focus\", (e) => this.handleFocus(io, e)),\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"blur\", (e) => this.handleBlur(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"focusable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"focusable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is \"touchable\". It means any interaction\r\n\t * whatsoever: mouse click, touch screen tap, swipe, drag, resize, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processTouchable(io: InteractionObject): void {\r\n\t\t// Add unified events\r\n\t\tif (io.clickable || io.hoverable || io.trackable || io.draggable || io.swipeable || io.resizable || io.rotatable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"touchable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"touchable\", new MultiDisposer([\r\n\r\n\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t(e) => this.handlePointerDown(io, e)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t(e) => this.handleTouchDown(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"touchable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"touchable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Non-pointer events\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatches \"focus\" event when element gains focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {FocusEvent}         ev  Original event\r\n\t */\r\n\tpublic handleFocus(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = true;\r\n\t\tif (io.events.isEnabled(\"focus\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"focus\"] = {\r\n\t\t\t\ttype: \"focus\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"focus\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used by regular click events to prevent focus if \"noFocus\" is set.\r\n\t *\r\n\t * This should not be called by \"focus\" handlers.\r\n\t *\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent | TouchEvent}         ev  Original event\r\n\t */\r\n\tprivate handleFocusBlur(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\")) {\r\n\t\t\tev.preventDefault();\r\n\t\t\t$dom.blur();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches \"blur\" event when element loses focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {FocusEvent}         ev  Original event\r\n\t */\r\n\tpublic handleBlur(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = false;\r\n\t\tif (io.events.isEnabled(\"blur\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"blur\"] = {\r\n\t\t\t\ttype: \"blur\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"blur\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global keyboard-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Checks if there is an item that has currently focus and that they key is\r\n\t * one of the directional keys. If both of the conditions are true, it\r\n\t * creates an object to simulate movement of dragable element with keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardEvent} ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyDown(ev: KeyboardEvent): void {\r\n\r\n\t\tif (this.focusedObject) {\r\n\t\t\tif (keyboard.isKey(ev, \"esc\")) {\r\n\t\t\t\t// ESC removes focus\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\t\t\telse if (this.focusedObject.draggable && keyboard.isKey(ev, [\"up\", \"down\", \"left\", \"right\"])) {\r\n\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Get focused object\r\n\t\t\t\tlet io = this.focusedObject;\r\n\r\n\t\t\t\t// Get particular key\r\n\t\t\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\r\n\t\t\t\t// If such disposer already exists we know the event is going on so we\r\n\t\t\t\t// just move on\r\n\t\t\t\tif (io.eventDisposers.hasKey(disposerKey)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create a keyboard mover\r\n\t\t\t\tlet ko = new InteractionKeyboardObject(io, ev);\r\n\t\t\t\tio.eventDisposers.setKey(disposerKey, ko);\r\n\t\t\t\tswitch (keyboard.getEventKey(ev)) {\r\n\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\tko.directionY = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\tko.directionY = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tko.directionX = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tko.directionX = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches related events when the keyboard key is realeasd.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardEvent} ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyUp(ev: KeyboardEvent): void {\r\n\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\t\tif (this.focusedObject) {\r\n\t\t\tconst disposer = this.focusedObject.eventDisposers.getKey(disposerKey);\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Dispose stuff\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tthis.focusedObject.eventDisposers.removeKey(disposerKey);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handler for a global \"pointermove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerMove(ev: MouseEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"track\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\r\n\t\t// Track\r\n\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t// Process further\r\n\t\tthis.handleMove(pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerdown\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerDown(ev: MouseEvent): void {\r\n\r\n\t\t// Remove delayed hovers\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"down\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents touch action from firing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event\r\n\t */\r\n\tpublic preventTouchAction(ev: TouchEvent): void {\r\n\t\tif (!ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerup\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerUp(ev: MouseEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"up\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\ttype: \"up\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t}\r\n\r\n\t\t// Process further\r\n\t\tthis.handleUp(pointer, ev);\r\n\r\n\t}\r\n\r\n\t/**\r\n * ==========================================================================\r\n * Global touch-related even handlers\r\n * ==========================================================================\r\n */\r\n\r\n\t/**\r\n\t * Handler for a global \"touchmove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchMove(ev: TouchEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t/*ev.stopPropagation();\r\n\t\tif (ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}*/\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"track\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\t\ttype: \"track\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Track\r\n\t\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t\t// Process further\r\n\t\t\tthis.handleMove(pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchstart\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchStart(ev: TouchEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t/*ev.preventDefault();\r\n\t\tif (ev.defaultPrevented) {\r\n\t\t\tev.stopPropagation();\r\n\t\t}*/\r\n\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (!this._usePointerEventsOnly && this.events.isEnabled(\"down\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\t\ttype: \"down\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchend\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchEnd(ev: TouchEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t/*ev.stopPropagation();\r\n\t\tif (ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}*/\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"up\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle element-related events\r\n\t\t\tthis.handleUp(pointer, ev);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles event when pointer is over [[InteractionObject]] and button is\r\n\t * pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}          io  Element\r\n\t * @param {MouseEvent | PointerEvent}  ev  Original event\r\n\t */\r\n\tpublic handlePointerDown(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t//ev.preventDefault();\r\n\t\t//ev.stopPropagation();\r\n\t\t//if (ev.defaultPrevented) {\r\n\t\t//}\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Set mouse button\r\n\t\tpointer.button = ev.which;\r\n\r\n\t\t// Reset pointer\r\n\t\tthis.resetPointer(pointer);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleDown(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] is hovered by a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent}         ev  Original event\r\n\t */\r\n\tpublic handleMouseOver(io: InteractionObject, ev: MouseEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Lock wheel\r\n\t\tif (io.wheelable) {\r\n\t\t\tthis.lockWheel();\r\n\t\t}\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOver(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] loses hover from a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent}         ev  Original event\r\n\t */\r\n\tpublic handleMouseOut(io: InteractionObject, ev: MouseEvent): void {\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Lock wheel\r\n\t\tif (io.wheelable) {\r\n\t\t\tthis.unlockWheel();\r\n\t\t}\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOut(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when mouse wheel is crolled over the [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {WheelEvent}         ev  Original event\r\n\t * @todo Investigate more-cross browser stuff https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n\t */\r\n\tpublic handleMouseWheel(io: InteractionObject, ev: WheelEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Init delta values\r\n\t\tlet deltaX: number = 0, deltaY: number = 0;\r\n\r\n\t\t// Calculate deltas\r\n\t\tif (ev instanceof WheelEvent) {\r\n\t\t\tdeltaX = Math.round(ev.deltaX);\r\n\t\t\tdeltaY = Math.round(ev.deltaY);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid event type\");\r\n\t\t}\r\n\r\n\t\t// Handle the event\r\n\t\tthis.handleWheel(io, pointer, deltaX, deltaY, ev);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific touch-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t  * Handles an event when an [[InteractionObject]] is touched on a touch\r\n\t  * device.\r\n\t  *\r\n\t  * @ignore Exclude from docs\r\n\t  * @param {InteractionObject}  io  Element\r\n\t  * @param {TouchEvent}         ev  Original event\r\n\t  */\r\n\tpublic handleTouchDown(io: InteractionObject, ev: TouchEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t// We're disabling this here because it's impossible to cancel touch\r\n\t\t// event otherwise, and it might be needed in order to control default\r\n\t\t// touch gestures.\r\n\t\t/*if (this._usePointerEventsOnly) {\r\n\t\t\treturn;\r\n\t\t}*/\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\tthis.resetPointer(pointer);\r\n\r\n\t\t\t// Process down\r\n\t\t\tthis.handleDown(io, pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Universal handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles click/tap. Checks for doublehit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleHit(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Check if this is a double-hit\r\n\t\tlet now = new Date().getTime();\r\n\t\tif (io.lastHit && (io.lastHit >= (now - this.getHitOption(io, \"doubleHitTime\")))) {\r\n\r\n\t\t\t// Yup - it's a double-hit\r\n\r\n\t\t\t// Cancel the hit\r\n\t\t\t//clearTimeout(io.lastHitPointer.hitTimeout);\r\n\r\n\t\t\t// Clear last hit\r\n\t\t\tio.lastHit = undefined;\r\n\t\t\tio.lastHitPointer = undefined;\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (io.events.isEnabled(\"doublehit\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"doublehit\"] = {\r\n\t\t\t\t\ttype: \"doublehit\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"doublehit\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Log last hit\r\n\t\t\tio.lastHit = now;\r\n\t\t\tio.lastHitPointer = pointer;\r\n\r\n\t\t\tif (this.getHitOption(io, \"delayFirstHit\")) {\r\n\t\t\t\t// Schedule hit report event to element\r\n\t\t\t\t/*io.lastHitPointer.hitTimeout = setTimeout(() => {\r\n\t\t\t\t\tif (pointer.button === 3) {\r\n\t\t\t\t\t\tif (io.events.isEnabled(\"rightclick\")) {\r\n\t\t\t\t\t\t\tlet imev: AMEvent<InteractionObject, InteractionObjectEvents>[\"rightclick\"] = {\r\n\t\t\t\t\t\t\t\ttype: \"rightclick\",\r\n\t\t\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\t\t\tevent: ev\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tio.events.dispatchImmediately(\"rightclick\", imev);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (io.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\t\t\tlet imev: AMEvent<InteractionObject, InteractionObjectEvents>[\"hit\"] = {\r\n\t\t\t\t\t\t\t\ttype: \"hit\",\r\n\t\t\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\t\t\tpoint: pointer.point\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tio.events.dispatchImmediately(\"hit\", imev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this.getHitOption(io, \"doubleHitTime\"));*/\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (pointer.button === 3) {\r\n\t\t\t\t\t// Execute HIT now\r\n\t\t\t\t\tif (io.events.isEnabled(\"rightclick\")) {\r\n\t\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"rightclick\"] = {\r\n\t\t\t\t\t\t\ttype: \"rightclick\",\r\n\t\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\t\tevent: ev\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tio.events.dispatchImmediately(\"rightclick\", imev);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (io.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"hit\"] = {\r\n\t\t\t\t\t\t\ttype: \"hit\",\r\n\t\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\t\tpoint: pointer.point\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tio.events.dispatchImmediately(\"hit\", imev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer hovering over [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleOver(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We need to check if pointer already exists in the downPointers so we\r\n\t\t// don't end up with duplicate pointers. This could happen on hybrid\r\n\t\t// displays where both touch and pointer event is generated on screen\r\n\t\t// touch.\r\n\t\tif (this.pointerExists(io.overPointers, pointer)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Add pointer to object\r\n\t\tio.overPointers.moveValue(pointer);\r\n\r\n\t\t// First one?\r\n\t\tif (io.overPointers.length === 1) {\r\n\r\n\t\t\t// Add to hovered elements (moved to InteractionObject)\r\n\t\t\t//this.overObjects.moveValue(io);\r\n\r\n\t\t\t// Report event to interaction object (but only for the first time)\r\n\t\t\tif (!io.isHover) {\r\n\r\n\t\t\t\t// Set element as hovered\r\n\t\t\t\tio.isHover = true;\r\n\r\n\t\t\t\t// Generate body track event. This is needed so that if element loads\r\n\t\t\t\t// under unmoved mouse cursor, we still need all the actions that are\r\n\t\t\t\t// required to happen to kick in.\r\n\t\t\t\tthis.handleTrack(this.body, pointer, ev, true);\r\n\r\n\t\t\t\t// Event\r\n\t\t\t\tif (io.events.isEnabled(\"over\")) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"over\"] = {\r\n\t\t\t\t\t\ttype: \"over\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tpointer: pointer\r\n\t\t\t\t\t};\r\n\t\t\t\t\tio.events.dispatchImmediately(\"over\", imev);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when [[InteractionObject]] is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleOut(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, ignoreBehavior: boolean = false): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove pointer from object\r\n\t\tio.overPointers.removeValue(pointer);\r\n\r\n\t\t// If there are no over and down pointers left, report OUT event\r\n\t\t// We need to check downPointers here because we might be dragging an item\r\n\t\t// that is constrained to certain area, but the mouse is already outside\r\n\t\t// that area. In this case we don't want to trigger an out event, not until\r\n\t\t// down pointer is rised.\r\n\t\tif (io.overPointers.length === 0) {\r\n\r\n\t\t\t// Remove from hovered objects (moved to InteractionObject)\r\n\t\t\t//this.overObjects.removeValue(io);\r\n\r\n\t\t\t// Report event to InteractionObject (but only when the last hover leaves)\r\n\t\t\tif (io.isHover) {\r\n\t\t\t\tif (io.downPointers.length === 0) {\r\n\r\n\t\t\t\t\t// Check touch behavior, but only if the pointer did not move\r\n\t\t\t\t\tif (!ignoreBehavior && pointer.touch && !this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tlet behavior = this.getHoverOption(io, \"touchOutBehavior\");\r\n\t\t\t\t\t\tif (behavior == \"leave\") {\r\n\t\t\t\t\t\t\t// Set to \"leave\", so we do not execute any \"out\" event.\r\n\t\t\t\t\t\t\t// It will be handled by any other interaction that happens\r\n\t\t\t\t\t\t\t// afterwards.\r\n\t\t\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\t\t\tevent: ev\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (behavior == \"delay\" && this.getHoverOption(io, \"touchOutDelay\")) {\r\n\t\t\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\t\t\ttimeout: setTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t\t\t\t\t\t\t}, this.getHoverOption(io, \"touchOutDelay\"))\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// Nothing for \"remove\" - that's how it works \"out-of-the-box\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Generate body track event. This is needed so that if element loads\r\n\t\t\t\t\t// under unmoved mouse cursor, we still need all the actions that are\r\n\t\t\t\t\t// required to happen to kick in.\r\n\t\t\t\t\tthis.handleTrack(this.body, pointer, ev, true);\r\n\r\n\t\t\t\t\tif (io.lastOutEvent) {\r\n\t\t\t\t\t\tio.lastOutEvent = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tio.isHover = false;\r\n\t\t\t\t\tif (io.events.isEnabled(\"out\")) {\r\n\t\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"out\"] = {\r\n\t\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\t\tpointer: pointer\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tio.events.dispatchImmediately(\"out\", imev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tio.lastOutEvent = ev;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer down.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleDown(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent | undefined): void {\r\n\r\n\t\t// Remove delayed hovers\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Stop inertia animations if they're currently being played out\r\n\t\tif (io.inert) {\r\n\t\t\tthis.stopInertia(io);\r\n\t\t}\r\n\r\n\t\t// Reset hover status if it's a touch pointer\r\n\t\t// @todo Check if we need to keep this\r\n\t\t/*if (pointer.touch && io.overPointers.length) {\r\n\t\t\twhile (io.overPointers.length) {\r\n\t\t\t\tthis.handleOut(io, io.overPointers.getIndex(0), ev);\r\n\t\t\t}\r\n\t\t\tio.isHover = false;\r\n\t\t}*/\r\n\r\n\t\t// Log last down event\r\n\t\tpointer.lastDownEvent = ev;\r\n\r\n\t\t// Add Pointer in object\r\n\t\t// We need to check if pointer already exists in the downPointers so we\r\n\t\t// don't end up with duplicate pointers. This could happen on hybrid\r\n\t\t// displays where both touch and pointer event is generated on screen\r\n\t\t// touch.\r\n\t\tif (!this.pointerExists(io.downPointers, pointer)) {\r\n\t\t\t//return;\r\n\t\t\tio.downPointers.moveValue(pointer);\r\n\t\t}\r\n\r\n\t\t// Lose focus if needed\r\n\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\")) {\r\n\t\t\tif (this.focusedObject) {\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\t\t\tif (!this.isGlobalElement(io)) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tio.isDown = true;\r\n\r\n\t\t// Report event\r\n\t\tif (io.events.isEnabled(\"down\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\r\n\t\t// Apply styles if necessary\r\n\t\tthis.applyCursorDownStyle(io, pointer);\r\n\r\n\t\t// Check if element is already hovered\r\n\t\t// (can't be pressed down without hovering)\r\n\t\tthis.handleOver(io, pointer, ev);\r\n\r\n\t\t// First down pointer?\r\n\t\tif (io.downPointers.length === 1) {\r\n\r\n\t\t\t// Start hold timeout\r\n\t\t\t/*pointer.holdTimeout = setTimeout(() => {\r\n\t\t\t\tif (io.events.isEnabled(\"hold\")) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, InteractionObjectEvents>[\"hold\"] = {\r\n\t\t\t\t\t\ttype: \"hold\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tpointer: pointer\r\n\t\t\t\t\t};\r\n\t\t\t\t\tio.events.dispatchImmediately(\"hold\", imev);\r\n\t\t\t\t}\r\n\t\t\t}, this.getHitOption(io, \"holdTime\"));*/\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.cancelHold(io);\r\n\t\t}\r\n\r\n\t\t// If element is draggable we prepare and postpone DRAG_START event (until\r\n\t\t// it is actually moved)\r\n\t\tif (io.draggable) {\r\n\t\t\tthis.processDragStart(io, pointer, ev);\r\n\t\t}\r\n\r\n\t\t// Set up swipe timeout\r\n\t\tif (io.swipeable) {\r\n\t\t\tpointer.swipeCanceled = false;\r\n\t\t\t/*pointer.swipeTimeout = setTimeout(function() {\r\n\t\t\t\tpointer.swipeCanceled = true;\r\n\t\t\t}, this.getSwipeOption(io, \"time\"));*/\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer move.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleMove(pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Process hovered elements\r\n\t\t// We check if the element became unhovered without reporting the mouseout\r\n\t\t// event. (it happens in some cases)\r\n\t\tif (!pointer.touch) {\r\n\t\t\t$iter.each(this.overObjects.backwards().iterator(), (io) => {\r\n\t\t\t\t// Is this pointer relevant to element?\r\n\t\t\t\tif (io.overPointers.contains(pointer) && io.hoverable) {\r\n\t\t\t\t\t// Check if the element is still hovered\r\n\t\t\t\t\tlet reset = false;\r\n\t\t\t\t\tif (io.element && pointer.lastEvent) {\r\n\t\t\t\t\t\tif (!$dom.contains(io.element, <HTMLElement>pointer.lastEvent.target)) {\r\n\t\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (reset) {\r\n\t\t\t\t\t\tthis.handleOut(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Override only if we have objects currently being dragged or otherwise\r\n\t\t// interacted with\r\n\t\tif (this.transformedObjects.length) {\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\r\n\t\t// Process down elements\r\n\t\t$iter.each(this.transformedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (io.downPointers.contains(pointer) &&\r\n\t\t\t\t// Swipe still happening?\r\n\t\t\t\t!(io.swipeable && this.swiping(io, pointer)) &&\r\n\t\t\t\t(io.draggable || io.resizable || io.rotatable)) {\r\n\t\t\t\tthis.handleTransform(io, ev);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Process tracked elements\r\n\t\t$iter.each(this.trackedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\t// @todo check if this is check is necessary\r\n\t\t\t/*if (!io.overPointers.contains(pointer)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}*/\r\n\t\t\tthis.handleTrack(io, pointer, ev);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles reporting of pointer movement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io        Element\r\n\t * @param {IPointer}                 pointer    Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev         Original event\r\n\t * @param {boolean}                  skipCheck  Sould we skip check if cursor actually moved\r\n\t */\r\n\tpublic handleTrack(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, skipCheck = false): void {\r\n\r\n\t\t// Do nothing if the cursor did not actually move\r\n\t\tif (!skipCheck && !this.moved(pointer, 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initiate TRACK event\r\n\t\tif (io.events.isEnabled(\"track\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer up.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleUp(pointer: IPointer, ev: MouseEvent | TouchEvent | undefined): void {\r\n\r\n\t\t// Log last up event\r\n\t\tpointer.lastUpEvent = ev;\r\n\r\n\t\t// Process hovered elements (but only if it's a touch pointer)\r\n\t\tif (pointer.touch) {\r\n\r\n\t\t\t$iter.each(this.overObjects.backwards().iterator(), (io) => {\r\n\t\t\t\t// Is this pointer relevant to element?\r\n\t\t\t\tif (io.overPointers.contains(pointer)) {\r\n\t\t\t\t\t// Remove from over pointers\r\n\t\t\t\t\tio.overPointers.removeValue(pointer);\r\n\r\n\t\t\t\t\t// No over pointers left?\r\n\t\t\t\t\tif (io.overPointers.length === 0) {\r\n\t\t\t\t\t\tthis.handleOut(io, pointer, ev);\r\n\t\t\t\t\t\t//this.overObjects.removeValue(io);\r\n\t\t\t\t\t\t//io.isHover = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Process down objects\r\n\t\t$iter.each(this.downObjects.backwards().iterator(), (io) => {\r\n\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (io && io.downPointers.contains(pointer)) {\r\n\t\t\t\t// Clear HOLD timeout just in case\r\n\t\t\t\t//this.cancelHold(io);\r\n\r\n\t\t\t\t// Restore styles\r\n\t\t\t\tthis.restoreCursorDownStyle(io, pointer);\r\n\r\n\t\t\t\t// Remove from over pointers\r\n\t\t\t\tio.downPointers.removeValue(pointer);\r\n\r\n\t\t\t\t// Initiate UP event\r\n\t\t\t\tif (io.events.isEnabled(\"up\")) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"up\"] = {\r\n\t\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tpointer: pointer\r\n\t\t\t\t\t};\r\n\t\t\t\t\tio.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Initiate delayed OUT event\r\n\t\t\t\tif (io.lastOutEvent) {\r\n\t\t\t\t\tthis.handleOut(io, pointer, io.lastOutEvent);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle swiping-related stuff\r\n\t\t\t\tif (io.swipeable && this.swiped(io, pointer)) {\r\n\t\t\t\t\t// Swiped - nothing else should happen\r\n\t\t\t\t\tthis.handleSwipe(io, pointer, ev);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Check if it maybe a click\r\n\t\t\t\t\tif (io.clickable && !this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tthis.handleHit(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove from down objects if no more pointers pressing down\r\n\t\t\t\t\tif (io.downPointers.length === 0) {\r\n\t\t\t\t\t\tio.isDown = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Do extra work for inert draggable objects\r\n\t\t\t\t\tif (io.inert && this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tthis.handleInertia(io, pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (io.draggable) {\r\n\t\t\t\t\t\tthis.processDragStop(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// No more down pointers?\r\n\t\t/*if (this.transformedObjects.length === 0) {\r\n\t\t\tthis.unlockDocument();\r\n\t\t}*/\r\n\r\n\t\t// Reset pointer\r\n\t\tthis.resetPointer(pointer);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles swipe action.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleSwipe(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// We pass in InteractionEvent with shift in mouse coordinates\r\n\t\t// between when the drag started and ended\r\n\t\tif (io.events.isEnabled(\"swipe\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipe\"] = {\r\n\t\t\t\ttype: \"swipe\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"swipe\", imev);\r\n\t\t}\r\n\r\n\t\tif (pointer.startPoint.x < pointer.point.x) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swiperight\"] = {\r\n\t\t\t\t\ttype: \"swiperight\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swiperight\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (io.events.isEnabled(\"swipeleft\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipeleft\"] = {\r\n\t\t\t\t\ttype: \"swipeleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swipeleft\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event triggering for wheel rotation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t * @param {number}             deltaX   Horizontal shift\r\n\t * @param {number}             deltaY   Vertical shift\r\n\t * @param {WheelEvent}         ev       Original event\r\n\t */\r\n\tpublic handleWheel(io: InteractionObject, pointer: IPointer, deltaX: number, deltaY: number, ev: WheelEvent): void {\r\n\t\tconst shift: IPoint = {\r\n\t\t\tx: deltaX,\r\n\t\t\ty: deltaY\r\n\t\t};\r\n\r\n\t\t// Trigger generic WHEEL event\r\n\t\tif (io.events.isEnabled(\"swiperight\")) {\r\n\t\t\tio.events.dispatchImmediately(\"wheel\", {\r\n\t\t\t\ttype: \"wheel\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tshift: shift\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Trigger direction-specific events\r\n\r\n\t\t// Horizontal\r\n\t\tif (deltaX < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelleft\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelleft\", {\r\n\t\t\t\t\ttype: \"wheelleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaX > 0) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelright\", {\r\n\t\t\t\t\ttype: \"wheelright\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Vertical\r\n\t\t} else if (deltaY < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelup\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelup\", {\r\n\t\t\t\t\ttype: \"wheelup\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaY > 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheeldown\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheeldown\", {\r\n\t\t\t\t\ttype: \"wheeldown\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates inertia checking sub-routines for different movement types:\r\n\t * drag, resize, rotate.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}   sprite\r\n\t * @param {IPointer}            pointer\r\n\t */\r\n\tpublic handleInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\tif (io.draggable && io.downPointers.length === 0) {\r\n\t\t\tthis.handleMoveInertia(io, pointer);\r\n\t\t}\r\n\r\n\t\tif (io.rotatable && io.downPointers.length === 1) {\r\n\t\t\tthis.handleRotateInertia(io, pointer);\r\n\t\t}\r\n\r\n\t\tif (io.resizable && io.downPointers.length > 1) {\r\n\t\t\tthis.handleResizeInertia(io, pointer);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues moving the element to simulate the effect of inertia. Happens\r\n\t * when `inert` and `draggable` object is dragged and then released.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic handleMoveInertia(io: InteractionObject, pointer: IPointer): void {\r\n\t\tlet interaction = io;\r\n\t\tlet type: \"move\" = \"move\";\r\n\t\tlet point = {\r\n\t\t\t\"x\": pointer.point.x,\r\n\t\t\t\"y\": pointer.point.y\r\n\t\t};\r\n\t\tlet startPoint = {\r\n\t\t\t\"x\": pointer.startPoint.x,\r\n\t\t\t\"y\": pointer.startPoint.y\r\n\t\t};\r\n\r\n\t\t// Init inertia object\r\n\t\tlet inertia = new Inertia(interaction, type, point, startPoint);\r\n\r\n\t\t// Get inertia data\r\n\t\tlet ref = this.getTrailPoint(pointer, new Date().getTime() - this.getInertiaOption(io, \"move\", \"time\"));\r\n\t\tif (typeof ref === \"undefined\") {\r\n\t\t\tthis.processDragStop(io, pointer, pointer.lastUpEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init animation options\r\n\t\tlet factor = this.getInertiaOption(io, \"move\", \"factor\");\r\n\t\tlet animationOptions = [{\r\n\t\t\t\"to\": pointer.point.x + (pointer.point.x - ref.point.x) * factor,\r\n\t\t\t\"property\": \"x\"\r\n\t\t}, {\r\n\t\t\t\"to\": pointer.point.y + (pointer.point.y - ref.point.y) * factor,\r\n\t\t\t\"property\": \"y\"\r\n\t\t}];\r\n\r\n\t\t// Start animation\r\n\t\tlet animation: Animation = new Animation(\r\n\t\t\tinertia,\r\n\t\t\tanimationOptions,\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"duration\"),\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"easing\")\r\n\t\t).start();\r\n\t\tthis._disposers.push(animation.events.on(\"animationended\", (ev) => {\r\n\t\t\tinertia.done();\r\n\t\t}));\r\n\r\n\t\t// Add inertia object\r\n\t\tio.inertias.setKey(\"move\", inertia);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues rotation of a `rotatable` element after it is rotated and\r\n\t * released.\r\n\t *\r\n\t * **NOTE:** this is is just a placeholder function. No actual functionality\r\n\t * is implemented, yet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t * @todo Implement functionality\r\n\t */\r\n\tpublic handleRotateInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Some day, folks. Some day...\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues resizing of a `resizable` element after it is resized and\r\n\t * released.\r\n\t *\r\n\t * **NOTE:** this is is just a placeholder function. No actual fucntionality\r\n\t * is implemented, yet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic handleResizeInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Some day, folks. Some day...\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates element's position, size and rotation based on position of\r\n\t * all its related pointers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io  Element\r\n\t * @param {MouseEvent | TouchEvent}  ev  Original event\r\n\t */\r\n\tpublic handleTransform(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Get primary pointer and its respective points\r\n\t\tlet pointer1: $type.Optional<IPointer> = io.downPointers.getIndex(0);\r\n\t\tlet point1: IPoint = null;\r\n\t\tlet startPoint1: IPoint = null;\r\n\r\n\t\tif (pointer1) {\r\n\t\t\tpoint1 = pointer1.point;\r\n\t\t\tstartPoint1 = pointer1.startPoint;\r\n\t\t}\r\n\r\n\t\t// Init secondary pointer\r\n\t\tlet pointer2: $type.Optional<IPointer> = io.downPointers.getIndex(1);\r\n\t\tlet point2: IPoint;\r\n\t\tlet startPoint2: IPoint;\r\n\r\n\t\t// Determine if it's a sinngle pointer or multi\r\n\t\tlet singlePoint: boolean = true;\r\n\t\tif ((io.downPointers.length > 1) && pointer2) {\r\n\r\n\t\t\t// Several pointers down\r\n\t\t\tsinglePoint = false;\r\n\r\n\t\t\t// Get second pointer\r\n\t\t\tpoint2 = pointer2.point;\r\n\t\t\tstartPoint2 = pointer2.startPoint;\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Just one pointer down\r\n\t\t\tsinglePoint = true;\r\n\r\n\t\t\t// Use center of the sprite to simulate \"second\" point of touch\r\n\t\t\tpoint2 = {\r\n\t\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\t\"y\": io.originalPosition.y\r\n\t\t\t};\r\n\t\t\tstartPoint2 = point2;\r\n\t\t}\r\n\r\n\t\t// Primary touch point moved?\r\n\t\tlet pointer1Moved = pointer1 && this.moved(pointer1, 0);\r\n\r\n\t\t// Report DRAG_START if necessary\r\n\t\tif (io.draggable && pointer1 && pointer1.dragStartEvents && pointer1.dragStartEvents.length && pointer1Moved) {\r\n\t\t\tif (io.events.isEnabled(\"dragstart\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstart\", pointer1.dragStartEvents.shift());\r\n\t\t\t}\r\n\t\t\t//delete pointer1.dragStartEvents;\r\n\t\t}\r\n\r\n\t\t// Determine what we do in order of superiority\r\n\t\tif (singlePoint && io.draggable) {\r\n\r\n\t\t\t// We have only one pointer and the Sprite is draggable\r\n\t\t\t// There's nothing else to be done - just move it\r\n\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Check if second touch point moved\r\n\t\t\tlet pointer2Moved = pointer2 && this.moved(pointer2, 0);\r\n\r\n\t\t\tif (io.draggable && io.resizable && io.rotatable) {\r\n\t\t\t\t//this.handleTransformAll(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformRotate(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tif (io.draggable) {\r\n\t\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (io.resizable) {\r\n\t\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (io.rotatable) {\r\n\t\t\t\t\tthis.handleTransformRotate(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles movement of the dragged element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}                        io            Element\r\n\t * @param {IPoint}                                   point         Current point of the pointer\r\n\t * @param {IPoint}                                   startPoint    Starting point of the pointer\r\n\t * @param {MouseEvent | TouchEvent | KeyboardEvent}  ev            Original event\r\n\t * @param {boolean}                                  pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformMove(io: InteractionObject, point: IPoint, startPoint: IPoint, ev: MouseEvent | TouchEvent | KeyboardEvent, pointerMoved: boolean): void {\r\n\r\n\t\tif (pointerMoved) {\r\n\t\t\tif (io.events.isEnabled(\"drag\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"drag\"] = {\r\n\t\t\t\t\ttype: \"drag\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tshift: {\r\n\t\t\t\t\t\t\"x\": point.x - startPoint.x,\r\n\t\t\t\t\t\t\"y\": point.y - startPoint.y\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstartPoint: startPoint,\r\n\t\t\t\t\tpoint: point\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"drag\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles resizing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io            Element\r\n\t * @param {IPoint}                   point1        Current position of reference point #1\r\n\t * @param {IPoint}                   startPoint1   Original position of reference point #1\r\n\t * @param {IPoint}                   point2        Current position of reference point #2\r\n\t * @param {IPoint}                   startPoint2   Original position of reference point #2\r\n\t * @param {MouseEvent | TouchEvent}  ev            Original event\r\n\t * @param {boolean}                  pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformResize(io: InteractionObject, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint, ev: MouseEvent | TouchEvent, pointerMoved: boolean): void {\r\n\t\tif (io.events.isEnabled(\"resize\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"resize\"] = {\r\n\t\t\t\ttype: \"resize\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tscale: $math.getScale(point1, startPoint1, point2, startPoint2),\r\n\t\t\t\tstartPoint1: startPoint1,\r\n\t\t\t\tpoint1: point1,\r\n\t\t\t\tstartPoint2: startPoint2,\r\n\t\t\t\tpoint2: point2\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"resize\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hdanles rotation of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io            Element\r\n\t * @param {IPoint}                   point1        Current position of reference point #1\r\n\t * @param {IPoint}                   startPoint1   Original position of reference point #1\r\n\t * @param {IPoint}                   point2        Current position of reference point #2\r\n\t * @param {IPoint}                   startPoint2   Original position of reference point #2\r\n\t * @param {MouseEvent | TouchEvent}  ev            Original event\r\n\t * @param {boolean}                  pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformRotate(io: InteractionObject, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint, ev: MouseEvent | TouchEvent, pointerMoved: boolean): void {\r\n\r\n\t\t// Prepare {InteractionEvent} object\r\n\t\tif (io.events.isEnabled(\"rotate\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"rotate\"] = {\r\n\t\t\t\ttype: \"rotate\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tangle: $math.getRotation(point1, startPoint1, point2, startPoint2),\r\n\t\t\t\t// Set rotation point\r\n\t\t\t\t/*center: (io.draggable\r\n\t\t\t\t\t? $math.getMidPoint(point1, point2)\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\t\t\t\"y\": io.originalPosition.y\r\n\t\t\t\t\t})*/\r\n\t\t\t};\r\n\r\n\t\t\tio.events.dispatchImmediately(\"rotate\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles all the preparations of the element when it starts to be dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processDragStart(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\t\t// Add to draggedObjects\r\n\t\tthis.transformedObjects.push(io);\r\n\r\n\t\t// Report \"dragstart\"\r\n\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstart\"] = {\r\n\t\t\ttype: \"dragstart\",\r\n\t\t\ttarget: io,\r\n\t\t\tevent: ev\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * If pointer is set we will not fire the event until the pointer has\r\n\t\t * actually moved. If it's not set we don't have to wait for anything, so we\r\n\t\t * just fire off the event right away.\r\n\t\t */\r\n\t\tif (pointer && pointer.dragStartEvents) {\r\n\t\t\tpointer.dragStartEvents.push(imev);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tio.dispatchImmediately(\"dragstart\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up element drag operation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processDragStop(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Pointer set?\r\n\t\tif (!pointer) {\r\n\t\t\tpointer = this.getDragPointer(io);\r\n\t\t}\r\n\r\n\t\t// Removed from transformedObjects\r\n\t\tthis.transformedObjects.removeValue(io);\r\n\r\n\t\t// Unlock document\r\n\t\t//this.unlockDocument();\r\n\r\n\t\t// Report dragstop\r\n\t\tif (!pointer || this.moved(pointer, 0)) {\r\n\t\t\tif (io.events.isEnabled(\"dragstop\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstop\"] = {\r\n\t\t\t\t\ttype: \"dragstop\",\r\n\t\t\t\t\ttarget: io\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstop\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Controls for InteractionObjects initiating directly\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Manually triggers drag start on the element. Could be useful in cases\r\n\t * where tracking or dragging one element can also influence dragging another\r\n\t * element.\r\n\t *\r\n\t * Passing in `pointer` reference is advisable. If not passed in it will try\r\n\t * to determine which pointer to attach to. However, it's better to specify\r\n\t * it explicitly.\r\n\t *\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic dragStart(io: InteractionObject, pointer?: IPointer): void {\r\n\t\tif (pointer || (pointer = this.getDragPointer(io))) {\r\n\t\t\tthis.handleDown(io, pointer, pointer.lastDownEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Manually ends drag on the element.\r\n\t *\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic dragStop(io: InteractionObject, pointer?: IPointer): void {\r\n\t\tif (pointer || (pointer = this.getDragPointer(io))) {\r\n\t\t\tthis.handleUp(pointer, pointer.lastUpEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method uses a fuzzy logic to find the pointer to be used for dragging.\r\n\t * Beware that this is not a rock-solid solution. If there are a few objects\r\n\t * being dragged at the same time, you may get unexepected results.\r\n\t *\r\n\t * @param  {InteractionObject}   io  InteractionObject to get pointers from\r\n\t * @return {Optional<IPointer>}      Pointer currently being used for dragging\r\n\t */\r\n\tpublic getDragPointer(io?: InteractionObject): $type.Optional<IPointer> {\r\n\t\tif (io) {\r\n\t\t\t// InteractionObject is supplied\r\n\t\t\t// Use it's first down pointer\r\n\t\t\treturn io.downPointers.getIndex(0);\r\n\t\t}\r\n\t\telse if (this.transformedObjects.length) {\r\n\t\t\t// Use first dragged object\r\n\t\t\treturn this.getDragPointer(this.transformedObjects.getIndex(0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Utils\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns pointer id for the given event object.\r\n\t *\r\n\t * @param  {any}     ev  Event\r\n\t * @return {string}      Pointer ID\r\n\t */\r\n\tprotected getPointerId(ev: any): string {\r\n\t\tif ($type.hasValue(ev.identifier)) {\r\n\t\t\treturn <string>ev.identifier;\r\n\t\t} else if ($type.hasValue(ev.pointerId)) {\r\n\t\t\treturn <string>ev.pointerId;\r\n\t\t} else {\r\n\t\t\treturn \"1\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Pointer]] object that is associated with the Event.\r\n\t *\r\n\t * If no such [[Pointer]] object exists, it is created.\r\n\t *\r\n\t * @param  {MouseEvent | Touch}  ev  Event\r\n\t * @return {IPointer}                Pointer\r\n\t */\r\n\tprotected getPointer(ev: MouseEvent | Touch): IPointer {\r\n\r\n\t\t// Get pointer id\r\n\t\tlet id = this.getPointerId(ev);\r\n\r\n\t\t// Get current coordinates\r\n\t\tlet point: IPoint = {\r\n\t\t\t\"x\": ev.clientX,\r\n\t\t\t\"y\": ev.clientY\r\n\t\t};\r\n\r\n\t\t// Look for the pointer in the Dictionary if it maybe already exists\r\n\t\tlet pointer: IPointer;\r\n\t\tif (this.pointers.hasKey(id)) {\r\n\r\n\t\t\t// We already have such pointer\r\n\t\t\tpointer = this.pointers.getKey(id)!;\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\tpointer.point = point;\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Init pointer\r\n\t\t\tpointer = {\r\n\t\t\t\t\"id\": id,\r\n\t\t\t\t//\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"pointer\"),\r\n\t\t\t\t\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"mouse\"),\r\n\t\t\t\t\"startPoint\": point,\r\n\t\t\t\t\"startTime\": new Date().getTime(),\r\n\t\t\t\t\"point\": point,\r\n\t\t\t\t\"track\": [],\r\n\t\t\t\t\"swipeCanceled\": false,\r\n\t\t\t\t\"dragStartEvents\": []\r\n\t\t\t};\r\n\r\n\t\t\t// Add first breadcrumb\r\n\t\t\tthis.addBreadCrumb(pointer, point);\r\n\r\n\t\t\t// Add for re-use later\r\n\t\t\tthis.pointers.setKey(id, pointer);\r\n\t\t}\r\n\r\n\t\t// Log last event\r\n\t\tpointer.lastEvent = ev;\r\n\r\n\t\treturn pointer;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the poiner to original state, i.e. cleans movement information,\r\n\t * starting point, etc.\r\n\t *\r\n\t * @param {IPointer} pointer Pointer\r\n\t */\r\n\tprotected resetPointer(pointer: IPointer): void {\r\n\t\tpointer.startTime = new Date().getTime();\r\n\t\tpointer.startPoint = pointer.point;\r\n\t\tpointer.track = [];\r\n\t\tpointer.swipeCanceled = false;\r\n\t\t//clearTimeout(pointer.swipeTimeout);\r\n\t\t//clearTimeout(pointer.holdTimeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a \"breadcrumb\" point to the [[Pointer]] to log its movement path.\r\n\t *\r\n\t * @param {IPointer}  pointer  Pointer\r\n\t * @param {IPoint}    point    Point coordinates\r\n\t */\r\n\tprotected addBreadCrumb(pointer: IPointer, point: IPoint): void {\r\n\t\tpointer.track.push({\r\n\t\t\t\"timestamp\": new Date().getTime(),\r\n\t\t\t\"point\": point\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the document for various touch-related operations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockDocument(): void {\r\n\t\tthis.prepElement(this.body);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores document functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockDocument(): void {\r\n\t\tif (this.transformedObjects.length == 0) {\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Lock element (disable all touch)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockElement(io: InteractionObject): void {\r\n\t\tthis.prepElement(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores element's functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockElement(io: InteractionObject): void {\r\n\t\tthis.restoreAllStyles(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Locks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockWheel(): void {\r\n\t\twindow.addEventListener(this._pointerEvents.wheel, this.wheelLockEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockWheel(): void {\r\n\t\twindow.removeEventListener(this._pointerEvents.wheel, this.wheelLockEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if top element at pointer's position belongs to the SVG.\r\n\t *\r\n\t * @ignore Exlude from docs\r\n\t * @param  {IPointer}       pointer  Pointer\r\n\t * @param  {SVGSVGElement}  svg      The <svg> element\r\n\t * @return {boolean}                 Belongs to SVG/\r\n\t */\r\n\tpublic isLocalElement(pointer: IPointer, svg: SVGSVGElement): boolean {\r\n\t\tlet target = document.elementFromPoint(pointer.point.x, pointer.point.y);\r\n\t\treturn target  && (svg === target || $dom.contains(svg, <HTMLElement>target));\r\n\t}\r\n\r\n\t/**\r\n\t * A function that cancels mouse wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {MouseEvent}  ev  Event object\r\n\t * @return {boolean}         Returns `false` to cancel\r\n\t */\r\n\tprotected wheelLockEvent(ev: MouseEvent): boolean {\r\n\t\tev.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a set of styles to an element. Stores the original styles so they\r\n\t * can be restored later.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}           io      Element\r\n\t * @param {Dictionary<string, string>}  styles  A Dictionary of style property and values\r\n\t */\r\n\tprotected prepElement(io: InteractionObject, permanent?: boolean): void {\r\n\r\n\t\tlet el = io.element;\r\n\r\n\t\tif (el) {\r\n\r\n\t\t\t// Define possible props\r\n\t\t\tlet props = [\r\n\t\t\t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n\t\t\t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n\t\t\t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n\t\t\t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n\t\t\t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n\t\t\t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n\t\t\t];\r\n\t\t\tfor (let i = 0; i < props.length; i++) {\r\n\t\t\t\tif (props[i] in el.style) {\r\n\t\t\t\t\tthis.setTemporaryStyle(io, props[i], \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove iOS-specific selection;\r\n\t\t\tthis.setTemporaryStyle(io, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n\t\t\t//this.setTemporaryStyle(io, \"webkitOverflowScrolling\", \"none\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels hold counting for the object.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tprotected cancelHold(io: InteractionObject): void {\r\n\t\t$iter.each(io.downPointers.iterator(), (pointer) => {\r\n\t\t\t//clearTimeout(pointer.holdTimeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels swipe.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tprotected cancelSwipe(io: InteractionObject): void {\r\n\t\t$iter.each(io.downPointers.iterator(), (pointer) => {\r\n\t\t\t//clearTimeout(pointer.swipeTimeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hit events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getHitOption(io: InteractionObject, option: keyof IHitOptions): any {\r\n\t\tlet res = io.hitOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hitOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hover events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getHoverOption(io: InteractionObject, option: keyof IHoverOptions): any {\r\n\t\tlet res = io.hoverOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hoverOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with swipe events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getSwipeOption(io: InteractionObject, option: keyof ISwipeOptions): any {\r\n\t\tlet res = io.swipeOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.swipeOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option for keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getKeyboardOption(io: InteractionObject, option: keyof IKeyboardOptions): any {\r\n\t\tlet res = io.keyboardOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.keyboardOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with inertia.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {InertiaTypes}       type    Inertia type\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getInertiaOption(io: InteractionObject, type: InertiaTypes, option: keyof IInertiaOptions): any {\r\n\t\tlet options: any = io.inertiaOptions.getKey(type);\r\n\t\tlet res: IInertiaOptions;\r\n\t\tif (options && $type.hasValue(options[type])) {\r\n\t\t\tres = options[type];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tres = (<any>this.inertiaOptions.getKey(type))[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops currently going on inertia. Useful if inertia is currently being\r\n\t * animated and the object is being interacted with.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tprotected stopInertia(io: InteractionObject): void {\r\n\t\tlet x: InertiaTypes;\r\n\t\tlet inertias: Array<InertiaTypes> = [\"move\", \"resize\", \"rotate\"];\r\n\t\tfor (let i = 0; i < inertias.length; i++) {\r\n\t\t\tx = inertias[i];\r\n\t\t\tif (io.inertias.hasKey(x)) {\r\n\t\t\t\tlet inertia: $type.Optional<Inertia> = io.inertias.getKey(x);\r\n\t\t\t\tif (inertia) {\r\n\t\t\t\t\tinertia.dispose();\r\n\t\t\t\t\t//io.inertiaAnimations.removeKey(x);\r\n\t\t\t\t\t//this.processDragStop(io);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if swiping is currently being performed on an object.\r\n\t *\r\n\t * @param  {InteractionObject}  io       Element\r\n\t * @param  {IPointer}           pointer  Pointer to check\r\n\t * @return {boolean}                     `true` if swiping\r\n\t */\r\n\tpublic swiping(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = new Date().getTime();\r\n\r\n\t\tif (pointer.swipeCanceled || !io.swipeable) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if a successfull swipe action was performed on an element.\r\n\t *\r\n\t * @param  {InteractionObject}  io       Element\r\n\t * @param  {IPointer}           pointer  Pointer\r\n\t * @return {boolean}                     Swiped?\r\n\t */\r\n\tpublic swiped(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = new Date().getTime();\r\n\t\tif (pointer.swipeCanceled) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.x - pointer.point.x) > this.getSwipeOption(io, \"horizontalThreshold\")) &&\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}   Element\r\n\t */\r\n\tpublic applyCursorOverStyle(io: InteractionObject): void {\r\n\r\n\t\t// Get sprite's cursor ooptions\r\n\t\tlet options = io.cursorOptions;\r\n\r\n\t\tif (!$type.hasValue(options.overStyle)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Apply cursor down styles\r\n\t\tfor (let i = 0; i < options.overStyle.length; i++) {\r\n\t\t\t$dom.setStyle(io.element, options.overStyle[i].property, options.overStyle[i].value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic applyCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.setTemporaryStyle(this.body, downStyle[i].property, downStyle[i].value);\r\n\t\t\t\tthis.setTemporaryStyle(io, downStyle[i].property, downStyle[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores original cursor style for the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic restoreCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.restoreStyle(this.body, downStyle[i].property);\r\n\t\t\t\tthis.restoreStyle(io, downStyle[i].property);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions\r\n\t */\r\n\tpublic setGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.setTemporaryStyle(body, styles[i].property, styles[i].value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions\r\n\t */\r\n\tpublic restoreGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.restoreStyle(body, styles[i].property);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element is a non-cahrt element.\r\n\t *\r\n\t * @param  {InteractionObject}  io  InteractionObject\r\n\t * @return {boolean}                Global element?\r\n\t */\r\n\tprotected isGlobalElement(io: InteractionObject): boolean {\r\n\t\treturn document.body === io.element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if pointer has moved since it was created.\r\n\t *\r\n\t * @param  {IPointer}  pointer    Pointer\r\n\t * @param  {number}    tolerance  Tolerance in pixels\r\n\t * @return {boolean}              `true` if the pointer has moved\r\n\t */\r\n\tpublic moved(pointer: IPointer, tolerance: number): boolean {\r\n\t\tlet shift = this.getShift(pointer);\r\n\t\treturn (Math.abs(shift.x) > tolerance) || (Math.abs(shift.y) > tolerance);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns total a shift in pointers coordinates between its original\r\n\t * position and now.\r\n\t *\r\n\t * @param  {IPointer}  pointer  Pointer\r\n\t * @return {IPoint}             Shift in coordinates (x/y)\r\n\t */\r\n\tpublic getShift(pointer: IPointer): IPoint {\r\n\t\treturn {\r\n\t\t\t\"x\": pointer.startPoint.x - pointer.point.x,\r\n\t\t\t\"y\": pointer.startPoint.y - pointer.point.y\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a point from [[Pointer]]'s move history at a certain timetamp.\r\n\t *\r\n\t * @param  {IPointer}               pointer    Pointer\r\n\t * @param  {number}                 timestamp  Timestamp\r\n\t * @return {Optional<IBreadcrumb>}             Point\r\n\t */\r\n\tpublic getTrailPoint(pointer: IPointer, timestamp: number): $type.Optional<IBreadcrumb> {\r\n\t\tlet res: $type.Optional<IBreadcrumb>;\r\n\t\tfor (let i = 0; i < pointer.track.length; i++) {\r\n\t\t\tif (pointer.track[i].timestamp >= timestamp) {\r\n\t\t\t\tres = pointer.track[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if same pointer already exists in the list.\r\n\t *\r\n\t * @param  {List<IPointer>}  list     List to check agains\r\n\t * @param  {IPointer}        pointer  Pointer\r\n\t * @return {boolean}                  Exists?\r\n\t */\r\n\tprotected pointerExists(list: List<IPointer>, pointer: IPointer): boolean {\r\n\t\tlet exists = false;\r\n\t\tlist.each((item) => {\r\n\t\t\texists = item.point.x == pointer.point.x && item.point.y == pointer.point.y;\r\n\t\t});\r\n\t\treturn exists;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[InteractionObject]] representation of a DOM element.\r\n\t *\r\n\t * You can use this on any HTML or SVG element, to add interactive features\r\n\t * to it.\r\n\t *\r\n\t * @param  {HTMLElement | SVGSVGElement}  element  Element\r\n\t * @return {InteractionObject}                     InteractionObject\r\n\t */\r\n\tpublic getInteraction(element: HTMLElement | SVGSVGElement): InteractionObject {\r\n\t\treturn new InteractionObject(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a style property on an element. Stores original value to be restored\r\n\t * later with [[restoreStyle]].\r\n\t *\r\n\t * @see {@link restoreStyle}\r\n\t * @param {InteractionObject}  io        Element\r\n\t * @param {string}             property  Property\r\n\t * @param {string}             value     Value\r\n\t */\r\n\tpublic setTemporaryStyle(io: InteractionObject, property: string, value: string): void {\r\n\r\n\t\t// Get element\r\n\t\t//let el = io.element.tagName == \"g\" ? <SVGSVGElement>io.element.parentNode : io.element;\r\n\t\tlet el = io.element;\r\n\r\n\t\t// Save original property if it is set and hasn't been saved before already\r\n\t\tif ($type.hasValue((<any>el.style)[property]) && !io.replacedStyles.hasKey(property)) {\r\n\t\t\tio.replacedStyles.setKey(property, (<any>el.style)[property]);\r\n\t\t}\r\n\r\n\t\t// Replace with the new one\r\n\t\t$dom.setStyle(el, property, value);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores specific style on an element.\r\n\t *\r\n\t * @param {InteractionObject}  io        Element\r\n\t * @param {string}             property  Style property\r\n\t */\r\n\tpublic restoreStyle(io: InteractionObject, property: string): void {\r\n\r\n\t\t// Reset style\r\n\t\tif (io.replacedStyles.hasKey(property)) {\r\n\t\t\t(<any>io.element.style)[property] = io.replacedStyles.getKey(property);\r\n\t\t\tio.replacedStyles.removeKey(property);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete (<any>io.element.style)[property];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restore temporarily reset styles on an element.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tpublic restoreAllStyles(io: InteractionObject): void {\r\n\t\t$iter.each(io.replacedStyles.iterator(), (a) => {\r\n\t\t\tconst key = a[0];\r\n\t\t\tconst value = a[1];\r\n\t\t\t(<any>io.element.style)[key] = value;\r\n\t\t\tio.replacedStyles.removeKey(key);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Processes dalyed events, such as \"out\" event that was initiated for\r\n\t * elements by touch.\r\n\t */\r\n\tprivate processDelayed(): void {\r\n\r\n\t\tlet delayedEvent;\r\n\t\twhile (delayedEvent = this._delayedEvents.out.shift()) {\r\n\t\t\tif (delayedEvent.timeout) {\r\n\t\t\t\tclearTimeout(delayedEvent.timeout);\r\n\t\t\t}\r\n\t\t\tthis.handleOut(delayedEvent.io, delayedEvent.pointer, delayedEvent.event, true);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object and cleans up after itself.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this.isDisposed) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t\tthis.unlockWheel();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet interaction: Interaction | null = null;\r\n\r\n/**\r\n * Returns a single unified global instance of [[Interaction]].\r\n *\r\n * All code should use this function, rather than create their own instances\r\n * of [[Interaction]].\r\n */\r\nexport function getInteraction(): Interaction {\r\n\tif (interaction == null) {\r\n\t\tinteraction = new Interaction();\r\n\t}\r\n\r\n\treturn interaction;\r\n}\r\n"]}